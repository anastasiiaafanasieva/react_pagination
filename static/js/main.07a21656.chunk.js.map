{"version":3,"sources":["Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","total","perPage","page","onPageChange","onClickNextButton","onclickPrevButton","pageQuantity","Math","ceil","startRange","endRange","arrTotal","Array","from","length","_","i","maxVisiblePages","className","type","disabled","onClick","map","number","hidden","classNames","active","value","App","state","setState","changePerPage","event","target","nextButton","prevButton","this","htmlFor","id","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6QAaaA,EAA8B,SAAC,GAOrC,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,QACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,kBAEMC,EAAeC,KAAKC,KAAKR,EAAQC,GACjCQ,EAAaR,GAAWC,EAAO,GAAK,EACpCQ,EAAWJ,IAAiBJ,EAAOF,EAAQE,EAAOD,EAOlDU,EAAWC,MAAMC,KAAK,CAAEC,OAAQR,IAAgB,SAACS,EAAGC,GAAJ,OAAUA,EAAI,KAG9DC,EAAkBX,EAAe,EAEvC,OACE,mCACE,sBAAKY,UAAU,aAAf,UACE,uCAAQT,EAAR,cAAwBC,EAAxB,eAAuCV,KAEvC,qBAAIkB,UAAU,aAAd,UACE,oBAAIA,UAAU,mBAAd,SACE,wBACEC,KAAK,SACLD,UAAU,qBACVE,SAAmB,IAATlB,EACVmB,QAAShB,EAJX,oBAUDM,EAASW,KAAI,SAAAC,GAAM,OAClB,sCACIA,IAAWrB,EAvBF,GAwBRqB,IAAWrB,EAxBH,IAyBT,oBAA6BgB,UAAU,mBAAvC,SACE,wBACEC,KAAK,SACLD,UAAU,gDAGVM,OAAQD,IAAWrB,EA/Bd,EAgCDA,EA/BE,EAgCFA,GAAQe,EAPd,kBADF,iBAAmBM,IAerB,oBAA2BL,UAAU,mBAArC,SACE,wBACEC,KAAK,SACLD,UAAWO,IACT,qBACA,CAAEC,OAAQxB,IAASqB,IAErBC,QAtDQG,EAsDeJ,EAtDc,IAAVI,GACxCA,IAAUzB,GACVyB,IAAUzB,EAAO,GACjByB,IAAUzB,EAAO,GACjByB,EAAQrB,GAmDKe,QAAS,kBAAMlB,EAAaoB,IAP9B,SASGA,KAVL,eAAiBA,OA/CN,IAACI,KA+DhB,oBAAIT,UAAU,mBAAd,SACE,wBACEC,KAAK,SACLD,UAAU,qBACVE,SAAUlB,IAASI,EACnBe,QAASjB,EAJX,6BC9ECwB,EAAb,4MACEC,MAAe,CACb7B,MAAO,GACPC,QAAS,EACTC,KAAM,GAJV,EAOEC,aAAe,SAACD,GACd,EAAK4B,SAAS,CAAE5B,UARpB,EAWE6B,cAAgB,SAACC,GACf,EAAKF,SAAS,CACZ7B,SAAU+B,EAAMC,OAAON,MACvBzB,KAAM,KAdZ,EAkBEgC,WAAa,WACX,EAAKJ,UAAS,SAACD,GAAD,MAAY,CACxB3B,KAAM2B,EAAM3B,KAAO,OApBzB,EAwBEiC,WAAa,WACX,EAAKL,UAAS,SAACD,GAAD,MAAY,CACxB3B,KAAM2B,EAAM3B,KAAO,OA1BzB,4CA8BE,WACE,MAIIkC,KAAKP,MAHP7B,EADF,EACEA,MACAC,EAFF,EAEEA,QACAC,EAHF,EAGEA,KAGF,OACE,qCACE,4CAEA,8BACE,wBAAOmC,QAAQ,UAAf,+BAEE,yBACEC,GAAG,UACHX,MAAO1B,EACPsC,SAAUH,KAAKL,cAHjB,UAKE,wBAAQJ,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,wBAKN,8BACE,cAAC,EAAD,CACE3B,MAAOA,EACPC,QAASA,EACTC,KAAMA,EACNC,aAAciC,KAAKjC,aACnBC,kBAAmBgC,KAAKF,WACxB7B,kBAAmB+B,KAAKD,sBAhEpC,GAAyBK,IAAMC,WCP/BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.07a21656.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport './Pagination.scss';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  page: number;\n  onPageChange: (number: number) => void;\n  onClickNextButton: () => void;\n  onclickPrevButton: () => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  page,\n  onPageChange,\n  onClickNextButton,\n  onclickPrevButton,\n}) => {\n  const pageQuantity = Math.ceil(total / perPage);\n  const startRange = perPage * (page - 1) + 1;\n  const endRange = pageQuantity === page ? total : page * perPage;\n  const isHiddenButton = (value: number) => (value !== 1\n  && value !== page\n  && value !== page + 1\n  && value !== page - 1\n  && value < pageQuantity);\n\n  const arrTotal = Array.from({ length: pageQuantity }, (_, i) => i + 1);\n  const rangeForSpread = 2;\n  const minVisiblePages = 4;\n  const maxVisiblePages = pageQuantity - 2;\n\n  return (\n    <>\n      <nav className=\"navigation\">\n        <h3>{`${startRange} - ${endRange} of ${total}`}</h3>\n\n        <ul className=\"pagination\">\n          <li className=\"pagination__item\">\n            <button\n              type=\"button\"\n              className=\"pagination__button\"\n              disabled={page === 1}\n              onClick={onclickPrevButton}\n            >\n              &laquo;\n            </button>\n          </li>\n\n          {arrTotal.map(number => (\n            <>\n              {(number === page + rangeForSpread\n              || number === page - rangeForSpread) && (\n                <li key={`spread-${number}`} className=\"pagination__item\">\n                  <button\n                    type=\"button\"\n                    className=\"\n                    pagination__button\n                    pagination__button-spread\"\n                    hidden={number === page - rangeForSpread\n                      ? page < minVisiblePages\n                      : page >= maxVisiblePages}\n                  >\n                    ...\n                  </button>\n                </li>\n              )}\n\n              <li key={`item-${number}`} className=\"pagination__item\">\n                <button\n                  type=\"button\"\n                  className={classNames(\n                    'pagination__button',\n                    { active: page === number },\n                  )}\n                  hidden={isHiddenButton(number)}\n                  onClick={() => onPageChange(number)}\n                >\n                  {number}\n                </button>\n              </li>\n            </>\n          ))}\n\n          <li className=\"pagination__item\">\n            <button\n              type=\"button\"\n              className=\"pagination__button\"\n              disabled={page === pageQuantity}\n              onClick={onClickNextButton}\n            >\n              &raquo;\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Pagination } from './Pagination';\n\ntype State = {\n  total: number,\n  perPage: number,\n  page: number,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    total: 42,\n    perPage: 5,\n    page: 1,\n  };\n\n  onPageChange = (page: number) => {\n    this.setState({ page });\n  };\n\n  changePerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      perPage: +event.target.value,\n      page: 1,\n    });\n  };\n\n  nextButton = () => {\n    this.setState((state) => ({\n      page: state.page + 1,\n    }));\n  };\n\n  prevButton = () => {\n    this.setState((state) => ({\n      page: state.page - 1,\n    }));\n  };\n\n  render() {\n    const {\n      total,\n      perPage,\n      page,\n    } = this.state;\n\n    return (\n      <>\n        <h1>Pagination</h1>\n\n        <div>\n          <label htmlFor=\"perPage\">\n            Items per page&nbsp;\n            <select\n              id=\"perPage\"\n              value={perPage}\n              onChange={this.changePerPage}\n            >\n              <option value=\"3\">3</option>\n              <option value=\"5\">5</option>\n              <option value=\"10\">10</option>\n              <option value=\"20\">20</option>\n            </select>\n          </label>\n        </div>\n\n        <div>\n          <Pagination\n            total={total}\n            perPage={perPage}\n            page={page}\n            onPageChange={this.onPageChange}\n            onClickNextButton={this.nextButton}\n            onclickPrevButton={this.prevButton}\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}